name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        python-version: [3.8, 3.9, '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Use Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Node.js dependencies
      run: |
        if [ -f package.json ]; then
          npm ci
        fi
    
    - name: Install Python dependencies
      run: |
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
        if [ -f pyproject.toml ]; then
          pip install -e .
        fi
    
    - name: Run Node.js tests
      run: |
        if [ -f package.json ]; then
          npm test
        fi
    
    - name: Run Python tests
      run: |
        if [ -f requirements.txt ] || [ -f pyproject.toml ]; then
          python -m pytest tests/ -v
        fi
    
    - name: Run linting
      run: |
        if [ -f package.json ]; then
          npm run lint
        fi
        if [ -f pyproject.toml ]; then
          python -m flake8 src/
          python -m black --check src/
        fi

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        if [ -f package.json ]; then
          npm ci
        fi
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
    
    - name: Build project
      run: |
        if [ -f package.json ]; then
          npm run build
        fi
        if [ -f pyproject.toml ]; then
          python -m build
        fi
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          dist/
          build/
          *.whl
          *.tar.gz

  coverage:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        if [ -f package.json ]; then
          npm ci
        fi
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
    
    - name: Run coverage tests
      run: |
        if [ -f package.json ]; then
          npm run test:coverage
        fi
        if [ -f requirements.txt ] || [ -f pyproject.toml ]; then
          python -m pytest tests/ --cov=src --cov-report=xml
        fi
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
