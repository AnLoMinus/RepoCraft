name: GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        if [ -f package.json ]; then
          npm ci
        fi
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
    
    - name: Build documentation
      run: |
        if [ -f package.json ] && [ -f docs/package.json ]; then
          cd docs && npm ci && npm run build
        elif [ -f pyproject.toml ]; then
          python -m sphinx docs/ docs/_build/html
        else
          # Fallback: copy docs to _site
          mkdir -p _site
          cp -r docs/* _site/ 2>/dev/null || true
          cp README.md _site/ 2>/dev/null || true
        fi
    
    - name: Setup Pages
      uses: actions/configure-pages@v3
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: |
          docs/_build/html
          docs/_site
          _site
          dist
        name: github-pages
    
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
